name: 'Pytest run'
description: 'Run tests'
inputs:
  python-version:  # id of input
    description: 'Python version to use'
    required: true
  redis:
    description: 'Redis version'
    required: true
runs:
  using: "composite"
  steps:
  - name: Set up Python ${{ inputs.python-version }}
    uses: actions/setup-python@v3
    with:
      python-version: ${{ inputs.python-version }}
  - name: Cache Redis builds
    uses: actions/cache@v3
    with:
      path: ~/redis
      key: redis-${{ hashFiles('.download-redis.sh') }}
  - name: Get pip cache dir
    id: pip-cache
    shell: bash
    run: |
      echo "::set-output name=dir::$(pip cache dir)"
  - name: pip cache
    uses: actions/cache@v3
    with:
      path: ${{ steps.pip-cache.outputs.dir }}
      key: pip-${{ inputs.python-version }}-${{ hashFiles('requirements-*.txt') }}
      restore-keys: |
        pip-${{ matrix.python-version }}-
  - name: Install dependencies
    shell: bash
    run: |
      python -m pip install --upgrade pip
      pip install -r requirements-test.txt
  - name: Run test on Redis ${{ inputs.redis }}
    shell: bash
    run: |
      pytest -n 0 --cov-report=xml --redis-exec=$HOME/redis/redis-${{ inputs.redis }}/src/redis-server
  - name: Run xdist test on Redis ${{ inputs.redis }}
    shell: bash
    run: |
      pytest -n 1 --cov-report=xml:coverage-xdist.xml --redis-exec=$HOME/redis/redis-${{ inputs.redis }}/src/redis-server
  - name: Upload coverage to Codecov
    uses: codecov/codecov-action@v3.0.0
    with:
      flags: linux,redis-${{ inputs.redis }}
      env_vars: OS, PYTHON
      fail_ci_if_error: true